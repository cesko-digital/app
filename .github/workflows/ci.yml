name: CI

on: [ pull_request ]

env:
  NODE_VERSION: 12

jobs:
  install_deps:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=yarn-cache-dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.yarn-cache-dir }}
          key: ${{ runner.os }}-build-${{ env.cache-yarn-cache }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-yarn-cache }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-v0-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        run: yarn install --frozen-lockfile --prefer-offline



  lint:
    name: Lint code and formatting
    runs-on: ubuntu-latest
    needs: [ install_deps ]
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-v0-${{ hashFiles('**/yarn.lock') }}

      - name: Lint code
        run: yarn lint

  unit_test:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: [ install_deps ]
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-v0-${{ hashFiles('**/yarn.lock') }}

      - name: Run tests
        run: yarn test

  type_check:
    name: Check types
    runs-on: ubuntu-latest
    needs: [ install_deps ]
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-v0-${{ hashFiles('**/yarn.lock') }}

      - name: Check types
        run: yarn type-check

  e2e_test:
    name: Run E2E tests
    runs-on: ubuntu-latest
    needs: [ install_deps ]
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-v0-${{ hashFiles('**/yarn.lock') }}


      - name: Install Cypress runner
        run: yarn cypress install

      - name: Run tests
        run: yarn cy:ci

